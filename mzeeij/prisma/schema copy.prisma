generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id          Int   @id @default(autoincrement())
  userid      Int
  accesslevel Int
  users       users @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id           Int      @id @default(autoincrement())
  CompanyName  String
  firstname    String?
  lastname     String?
  username     String?  @unique
  mobile       String?  @unique
  email        String?  @unique
  passwordhash String
  registeredat DateTime @db.Timestamp(6)
  role         String?
  company      company @relation(fields: [CompanyName], references: [CompanyName], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  CompanyName String  @id
  CRnum String
  registeredat DateTime @db.Timestamp(6)
  users        users[]
  orders       orders[]
  admin        admin[]
  supplier     supplier[]
  Meta_product  Meta_product[]
}

model Meta_product {
  id         Int         @id @default(autoincrement())
  CompanyName    String
  company      company @relation(fields: [CompanyName], references: [CompanyName], onDelete: NoAction, onUpdate: NoAction)
  supplierid  Int?
  supplier      supplier @relation(fields: [supplierid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  title      String
  summary    String?
  sku        String?
  upc        String?
  price      Float
  createdat  DateTime    @db.Timestamp(6)
  updatedat  DateTime?   @db.Timestamp(6)
  estimatedExp  DateTime?
  item  item[]
  supplier supplier[]
}

model item {
  id        Int     @id @default(autoincrement())
  Metaid
  Meta_product      Meta_product @relation(fields: [Metaid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  insertedat  DateTime    @db.Timestamp(6)
  removedat  DateTime?   @db.Timestamp(6)
  location   String
  Expiredate  DateTime?
}

model supplier {
  id      Int       @id @default(autoincrement())
  name    String
  CompanyName    String
  company      company @relation(fields: [CompanyName], references: [CompanyName], onDelete: NoAction, onUpdate: NoAction)
  contact String?
  address String?
  Meta_product Meta_product[]
}

model orders {
  id                  Int         @id @default(autoincrement())
  companyName         String
  company      company @relation(fields: [CompanyName], references: [CompanyName], onDelete: NoAction, onUpdate: NoAction)
  userid              Int
  users       users @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  itemid              Int
  item  item @relation(fields: [itemid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  type                Int         @default(0)
  status              Int         @default(0)
  outgoing            Boolean 
  createdat           DateTime    @db.Timestamp(6)
  item             item[]
}

model invoice {
  id                  Int         @id @default(autoincrement())
  orderid              Int
  orders  orders @relation(fields: [orderid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subtotal            Float       @default(0) @db.Real
  metaproductdiscount Float       @default(0) @db.Real
  tax                 Float       @default(0) @db.Real
  shipping            Float       @default(0) @db.Real
  total               Float       @default(0) @db.Real
  promo               String?
  discount            Float       @default(0) @db.Real
  grandtotal          Float       @default(0) @db.Real
  createdat           DateTime    @db.Timestamp(6)
}



